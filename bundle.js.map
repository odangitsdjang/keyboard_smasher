{"version":3,"sources":["webpack:///webpack/bootstrap ad6009481a2fcf0a4105","webpack:///./js/components.js","webpack:///./js/entry.js","webpack:///./js/canvas.js","webpack:///./js/onclicks.js","webpack:///./game/beatmap.js","webpack:///./game","webpack:///./songs/Cartoon-Immortality.json"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AC7D6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;;AAIA;;AAEA;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;ACnCA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;;;;;;;;;AClBA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/BA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,2B;;;;;;ACNA,kBAAkB,4BAA4B,0G","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ad6009481a2fcf0a4105","import {INTERVAL_MILLISECOND} from './entry';\nconst COMPONENT_RADIUS = 30;\nconst COMPONENT_COUNT = 3;\nconst GAME_COMPONENT_SPEED = 4;\n// Make this class scalable so that if I want to change it later\n// then I can just change the numbers up at the top\nclass Components {\n\n  // Use get so that you can use the constant without parenthesis\n  // i.e. Components.componentRadius\n  static get componentRadius() {\n    return COMPONENT_RADIUS;\n  }\n\n\n\n  // If 3 components, then divide 4 sections to center it evenly in the center\n  static drawUserComponents(ctx, canvas, options) {\n    for (let i = 0; i < COMPONENT_COUNT; i++) {\n      this.drawBeatComponent(ctx, canvas, i, options, 1);\n    }\n  }\n\n  static addGameComponents(ctx, canvas, options) {\n    if (options.songAudio.currentTime) {\n      // console.log(options.songAudio.currentTime);\n      Object.keys(options.beatMapData.beatmaps).forEach(key => {\n        options.beatMapData.beatmaps[key].forEach( secondVal => {\n          if (secondVal >= options.songAudio.currentTime &&\n              secondVal < options.songAudio.currentTime+INTERVAL_MILLISECOND/1000 )\n            options.activeComponents[key].push(0);\n        });\n      });\n    }\n  }\n  // options.activeComponents = {\n  // q: [position]\n  // w: [position, position],\n  // e: [position, position, position]\n  // }\n  static removeGameComponents(ctx, canvas, options) {\n    Object.keys(options.activeComponents).forEach(key=> {\n      options.activeComponents[key].forEach((pos,i)=> {\n        // change after adding score logic/physics\n        if (options.activeComponents[key][i] > canvas.height ||\n            (options.qPressed && key === \"q\") ||\n            (options.wPressed && key === \"w\") ||\n            (options.ePressed && key === \"e\"))   {\n          // delete the element from active components\n          options.activeComponents[key].splice(i,1);\n        }\n      });\n    });\n  }\n\n  static renderGameComponents(ctx, canvas, options) {\n    this.addGameComponents(ctx, canvas, options);\n    this.removeGameComponents(ctx, canvas, options);\n    Object.keys(options.activeComponents).forEach(key=> {\n      options.activeComponents[key].forEach((pos,i)=> {\n\n        options.activeComponents[key][i] += GAME_COMPONENT_SPEED;\n        let loc = 0;\n        if (key === \"q\") {\n          ctx.fillStyle = \"#AA00FF\";\n          loc = 0;\n        }\n        else if (key === \"w\") {\n          ctx.fillStyle = \"#00AAFF\";\n          loc = 1;\n        }\n        else if (key === \"e\") {\n          ctx.fillStyle = \"#FFAA00\";\n          loc = 2;\n\n        }\n\n        ctx.beginPath();\n        const canvasWidth = canvas.width;\n        const canvasHeight = canvas.height;\n        ctx.arc( canvasWidth/(COMPONENT_COUNT+1) +\n        (canvasWidth/(COMPONENT_COUNT+1) * loc), pos, COMPONENT_RADIUS,\n          0, Math.PI*2, true);\n        ctx.fill();\n        ctx.closePath();\n\n      });\n    });\n  }\n\n  // area === 1 specifies user area, 2 specifies game component\n  static drawBeatComponent(ctx, canvas, location, options, area) {\n    ctx.beginPath();\n    const canvasWidth = canvas.width;\n    const canvasHeight = canvas.height;\n    ctx.arc( canvasWidth/(COMPONENT_COUNT+1) +\n    (canvasWidth/(COMPONENT_COUNT+1) * location), canvasHeight-60, COMPONENT_RADIUS,\n      0, Math.PI*2, true);\n    ctx.fillStyle = \"#000000\";\n    this.changeColor(ctx, location, options);\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  static changeColor(ctx, i, options) {\n    if (options.qPressed && i === 0) {\n      ctx.fillStyle = \"#AA00FF\";\n    } else if (options.wPressed && i === 1) {\n      ctx.fillStyle = \"#00AAFF\";\n    } else if (options.ePressed && i === 2) {\n      ctx.fillStyle = \"#FFAA00\";\n    }\n  }\n\n\n\n}\n\nexport default Components;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/components.js\n// module id = 0\n// module chunks = 0","import components from './components';\nimport Canvas from './canvas';\nimport OnClickUtil from './onclicks';\n// this is for 144 hertz\nexport const INTERVAL_MILLISECOND = 6.944444;\n// currentPlayTime\ndocument.addEventListener('DOMContentLoaded', () => {\n    // options.activeComponents = {\n    // q: [position]\n    // w: [position, position],\n    // e: [position, position, position]\n    // }\n    const options = {\n      songAudio: 0,\n      beatMapData: 0,\n      activeComponents: {\n        q: [],\n        w: [],\n        e: []\n      },\n      qPressed: false,\n      wPressed: false,\n      ePressed: false\n    };\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n\n    OnClickUtil.addAllLinks(ctx, canvas, options);\n\n    const drawing = setInterval((e) => {\n      options.songMilliseconds += INTERVAL_MILLISECOND;\n      Canvas.draw(ctx, canvas, options);\n    }, INTERVAL_MILLISECOND);\n    // clear interval  when game over?\n});\n// console.log(options.songAudio.currentTime);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/entry.js\n// module id = 1\n// module chunks = 0","import Components from './components';\n\nclass Canvas {\n  static drawHealthBar() {\n\n  }\n\n  static draw(ctx, canvas, options) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    Components.renderGameComponents(ctx, canvas, options);\n    Components.drawUserComponents(ctx, canvas, options);\n  }\n\n\n\n}\n\n\nexport default Canvas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/canvas.js\n// module id = 2\n// module chunks = 0","import BeatMap from '../game/beatmap';\nclass OnClickUtil {\n\n\n  static songLinks(ctx, canvas, options) {\n    const stopSong = (opt) => {\n      opt.songAudio.pause();\n      opt.songMilliseconds = 0;\n      opt.songAudio.currentTime = 0;\n    };\n\n    const songs = document.getElementsByTagName('a');\n    for(let i = 0; i < songs.length; i++) {\n      songs[i].onclick = () => {\n        if (songs[i].getAttribute('data-link')) {\n          const songLink = songs[i].getAttribute('data-link');\n          if (options.songAudio)\n            stopSong(options);\n          options.songAudio = new Audio(songLink);\n          options.songAudio.play();\n          new BeatMap(ctx, canvas, options, songLink).play();\n        } else {\n          // should be replaced\n          stopSong(options);\n        }\n      };\n    }\n  }\n\n  static keyPressedLinks(options) {\n    function keyDownHandler(e) {\n      if (e.keyCode === 81) {\n        options.qPressed = true;\n      }\n      else if (e.keyCode === 87) {\n        options.wPressed = true;\n      }\n      else if (e.keyCode === 69) {\n        options.ePressed = true;\n      }\n    }\n\n    function keyUpHandler(e) {\n      if (e.keyCode === 81) {\n        options.qPressed = false;\n      }\n      else if (e.keyCode === 87) {\n        options.wPressed = false;\n      }\n      else if (e.keyCode === 69) {\n        options.ePressed = false;\n      }\n    }\n\n    document.addEventListener(\"keydown\", keyDownHandler, false);\n    document.addEventListener(\"keyup\", keyUpHandler, false);\n  }\n\n  static addAllLinks(ctx, canvas, options) {\n    OnClickUtil.songLinks(ctx, canvas, options);\n    OnClickUtil.keyPressedLinks(options);\n  }\n}\n\nexport default OnClickUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/onclicks.js\n// module id = 3\n// module chunks = 0","import Components from '../js/components';\n\nconst beatmap1 = require('../songs/Cartoon-Immortality.json');\n\n\n// this class still needs work to allow multiple songs\nclass BeatMap {\n  constructor(ctx, canvas, options, songLink) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.options = options;\n    this.songLink = songLink;\n    this.beatMapLink = \"\";\n    this.data = beatmap1;\n  }\n\n  play() {\n    this.options.beatMapData = this.data;\n\n  }\n\n  // this function doesn't work because you cannot dynamically require files in javascript..\n  grabData() {\n\n    // Add more file extensions here as needed\n    const extensionIndex = /(mp3|wav)$/.exec(this.songLink).index;\n    this.beatMapLink = \".\".concat(this.songLink.slice(0, extensionIndex).concat(\"json\"));\n    this.data = require(this.beatMapLink);\n  }\n}\n\nexport default BeatMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game/beatmap.js\n// module id = 4\n// module chunks = 0","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 5;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game\n// module id = 5\n// module chunks = 0","module.exports = {\"bpm\":\"173.939\",\"beatmaps\":{\"q\":[1,2.2,2.371439,3.3,4.4,5.5,6.6],\"w\":[1.25,1.35,1.45,1.55,1.65,2.3772],\"e\":[1.7,1.8,1.9,1.95,2,2.05]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./songs/Cartoon-Immortality.json\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}